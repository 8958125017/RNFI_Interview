{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { retry } from 'rxjs/operators';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./constants\";\nexport let ApiIntegrationService = /*#__PURE__*/(() => {\n  class ApiIntegrationService {\n    constructor(http, constants) {\n      this.http = http;\n      this.constants = constants;\n      this.baseURL = this.constants.basePath;\n    }\n\n    contactusUser(data) {\n      return this.http.post(this.baseURL + 'api/v1/contactusUser', data).pipe(retry(5));\n    }\n\n    login(data) {\n      debugger;\n      return this.http.post(this.baseURL + '/login', data).pipe(retry(5));\n    }\n\n    uploadFile(data) {\n      return this.http.post(this.baseURL + '/uploadFile', data).pipe(retry(5));\n    }\n\n    addHomepageMedia(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/addHomepageMedia', data, httpOptions).pipe(retry(5));\n    }\n\n    updateHomepageMedia(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/updateHomepageMedia', data, httpOptions).pipe(retry(5));\n    }\n\n    getHomepageMedia(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/getHomepageMedia', data, httpOptions).pipe(retry(5));\n    }\n\n    deleteHomepageMedia(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/deleteHomepageMedia', data, httpOptions).pipe(retry(5));\n    }\n\n    addJourneyDashboard(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/addJourneyDashboard', data, httpOptions).pipe(retry(5));\n    }\n\n    getJourneyDashboard(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.get(this.baseURL + '/getJourneyDashboard', httpOptions).pipe(retry(5));\n    }\n\n    updateJourneyDashboard(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/updateJourneyDashboard', data, httpOptions).pipe(retry(5));\n    }\n\n    deleteJourneyDashboard(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/deleteJourneyDashboard', data, httpOptions).pipe(retry(5));\n    }\n\n    addGallery(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/addGallery', data, httpOptions).pipe(retry(5));\n    }\n\n    updateGallery(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/updateGallery', data, httpOptions).pipe(retry(5));\n    }\n\n    getGallery(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/getGallery', data, httpOptions).pipe(retry(5));\n    }\n\n    deleteGallery(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/deleteGallery', data, httpOptions).pipe(retry(5));\n    }\n\n    addEvents(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/addEvents', data, httpOptions).pipe(retry(5));\n    }\n\n    getEvents(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/getEvents', data, httpOptions).pipe(retry(5));\n    }\n\n    updateEvents(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/updateEvents', data, httpOptions).pipe(retry(5));\n    }\n\n    deleteEvents(data) {\n      const token = localStorage.getItem('stpiToken');\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'authorization': \"\" + token\n        })\n      };\n      return this.http.post(this.baseURL + '/deleteEvents', data, httpOptions).pipe(retry(5));\n    }\n\n  }\n\n  ApiIntegrationService.ɵfac = function ApiIntegrationService_Factory(t) {\n    return new (t || ApiIntegrationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ConstantModule));\n  };\n\n  ApiIntegrationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiIntegrationService,\n    factory: ApiIntegrationService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiIntegrationService;\n})();","map":null,"metadata":{},"sourceType":"module"}